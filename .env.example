# ==============================================================================
# üöÄ SSH MICROSERVICE CONFIGURATION
# ==============================================================================
# Copy this file to .env and update with your actual values
# Never commit .env file to version control!

# ------------------------------------------------------------------------------
# üñ•Ô∏è SERVER CONFIGURATION
# ------------------------------------------------------------------------------
NODE_ENV=development
PORT=3000
HOST=0.0.0.0
BASE_URL=http://localhost:3000

# ------------------------------------------------------------------------------
# üîí SECURITY (REQUIRED)
# ------------------------------------------------------------------------------
# JWT Secret - MUST be at least 32 characters long
# Generate with: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-minimum-32-characters-long-here

# Encryption Key - MUST be exactly 32 characters
# Generate with: openssl rand -base64 32 | cut -c1-32
ENCRYPTION_KEY=your-32-character-encryption-key

# API Key for client authentication
# Generate with: openssl rand -hex 32
API_KEY=your-api-key-for-client-authentication

# bcrypt salt rounds (higher = more secure but slower)
BCRYPT_SALT_ROUNDS=12

# ------------------------------------------------------------------------------
# üî• FIREBASE ADMIN SDK (REQUIRED)
# ------------------------------------------------------------------------------
# Get these from Firebase Console > Project Settings > Service Accounts
# Generate new private key and use the downloaded JSON values

FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY_ID=your-private-key-id

# Private key with escaped newlines (replace \n with \\n)
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----"

FIREBASE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/your-service-account%40your-project.iam.gserviceaccount.com

# ------------------------------------------------------------------------------
# üö¶ RATE LIMITING
# ------------------------------------------------------------------------------
# Time window in milliseconds (default: 15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per window
RATE_LIMIT_MAX_REQUESTS=100

# Skip counting successful requests
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# ------------------------------------------------------------------------------
# üîå SSH CONFIGURATION
# ------------------------------------------------------------------------------
# SSH connection timeout in milliseconds
SSH_CONNECTION_TIMEOUT=10000

# SSH command execution timeout in milliseconds
SSH_COMMAND_TIMEOUT=30000

# SSH keep-alive interval in milliseconds
SSH_KEEPALIVE_INTERVAL=1000

# Maximum concurrent SSH connections
MAX_CONCURRENT_CONNECTIONS=10

# SSH debug level (0=none, 1=basic, 2=verbose)
SSH_DEBUG_LEVEL=0

# ------------------------------------------------------------------------------
# üìù LOGGING
# ------------------------------------------------------------------------------
# Log level: error, warn, info, debug, verbose
LOG_LEVEL=info

# Log file path (relative to project root)
LOG_FILE=logs/ssh-microservice.log

# Maximum log file size (e.g., 10m, 100k)
LOG_MAX_SIZE=10m

# Maximum number of log files to keep
LOG_MAX_FILES=5

# Enable HTTP request logging
ENABLE_REQUEST_LOGGING=true

# ------------------------------------------------------------------------------
# üåê CORS
# ------------------------------------------------------------------------------
# Allowed origins (comma-separated)
# Add your frontend URLs here
ALLOWED_ORIGINS=http://localhost:8081,exp://192.168.1.100:8081,http://localhost:3000,http://localhost:3001

# ------------------------------------------------------------------------------
# üíæ CACHE
# ------------------------------------------------------------------------------
# Cache TTL in seconds (default: 5 minutes)
CACHE_TTL=300

# Cache cleanup check period in seconds (default: 10 minutes)
CACHE_CHECK_PERIOD=600

# Maximum number of cache keys
MAX_CACHE_KEYS=1000

# ------------------------------------------------------------------------------
# üéØ MONITORING & HEALTH
# ------------------------------------------------------------------------------
# Health check interval in milliseconds (default: 30 seconds)
HEALTH_CHECK_INTERVAL=30000

# Enable Prometheus metrics
ENABLE_METRICS=true

# Metrics server port (separate from main app)
METRICS_PORT=9090

# ------------------------------------------------------------------------------
# üê≥ DOCKER (Optional)
# ------------------------------------------------------------------------------
# Internal container port
DOCKER_INTERNAL_PORT=3000

# External mapped port
DOCKER_EXTERNAL_PORT=3000

# ------------------------------------------------------------------------------
# üóÑÔ∏è DATABASE (Optional)
# ------------------------------------------------------------------------------
# Redis configuration (if using Redis for caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=redis-password
REDIS_DB=0

# PostgreSQL (if using for user management)
# DATABASE_URL=postgresql://user:password@localhost:5432/ssh_microservice

# ------------------------------------------------------------------------------
# üîê SSL/TLS (Production)
# ------------------------------------------------------------------------------
# SSL certificate paths (for HTTPS)
# SSL_CERT_PATH=/path/to/certificate.crt
# SSL_KEY_PATH=/path/to/private.key
# SSL_CA_PATH=/path/to/ca-bundle.crt

# Force HTTPS redirect
# FORCE_HTTPS=true

# ------------------------------------------------------------------------------
# üìß NOTIFICATIONS (Optional)
# ------------------------------------------------------------------------------
# Email notifications for alerts
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password
# ALERT_EMAIL=admin@yourdomain.com

# Slack notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# ------------------------------------------------------------------------------
# üß™ TESTING (Test Environment)
# ------------------------------------------------------------------------------
# Test SSH server configuration
TEST_SSH_HOST=test.example.com
TEST_SSH_USER=testuser
TEST_SSH_PASSWORD=testpassword
TEST_SSH_PORT=22

# Test database
# TEST_DATABASE_URL=postgresql://user:password@localhost:5433/ssh_microservice_test

# ------------------------------------------------------------------------------
# üöÄ DEPLOYMENT (Production)
# ------------------------------------------------------------------------------
# Deployment environment
# DEPLOYMENT_ENV=production

# Load balancer health check path
# HEALTH_CHECK_PATH=/health

# Process management
# PM2_INSTANCES=max
# PM2_EXEC_MODE=cluster

# ------------------------------------------------------------------------------
# üìä EXTERNAL SERVICES (Optional)
# ------------------------------------------------------------------------------
# Sentry for error tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# New Relic for APM
# NEW_RELIC_LICENSE_KEY=your-license-key
# NEW_RELIC_APP_NAME=SSH Microservice

# DataDog for monitoring
# DD_API_KEY=your-datadog-api-key
# DD_SERVICE=ssh-microservice

# ------------------------------------------------------------------------------
# üîß ADVANCED CONFIGURATION
# ------------------------------------------------------------------------------
# Node.js options
# NODE_OPTIONS=--max-old-space-size=2048

# Timezone
# TZ=America/New_York

# Debugging
# DEBUG=ssh:*,auth:*

# Performance monitoring
# ENABLE_PROFILING=false
# PROFILING_INTERVAL=60000

# Memory monitoring
# MEMORY_THRESHOLD_WARNING=512
# MEMORY_THRESHOLD_CRITICAL=1024

# ------------------------------------------------------------------------------
# üí° DEVELOPMENT ONLY
# ------------------------------------------------------------------------------
# These settings should only be used in development

# Enable hot reload
# HOT_RELOAD=true

# Enable source maps
# SOURCE_MAPS=true

# Mock external services
# MOCK_FIREBASE=false
# MOCK_SSH=false

# Development shortcuts
# SKIP_AUTH=false
# SKIP_RATE_LIMITING=false

# ------------------------------------------------------------------------------
# üö® SECURITY NOTES
# ------------------------------------------------------------------------------
# 1. Never commit .env file to version control
# 2. Use strong, unique passwords and keys
# 3. Rotate secrets regularly
# 4. Use environment-specific configurations
# 5. Enable HTTPS in production
# 6. Use secure headers and CORS settings
# 7. Monitor for suspicious activities
# 8. Keep dependencies updated

# ------------------------------------------------------------------------------
# üîó HELPFUL COMMANDS
# ------------------------------------------------------------------------------
# Generate JWT secret:     openssl rand -base64 32
# Generate encryption key: openssl rand -base64 32 | cut -c1-32
# Generate API key:        openssl rand -hex 32
# Generate UUID:           uuidgen
# Test configuration:      npm run config:validate